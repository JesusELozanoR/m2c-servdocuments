steps:
- name: gcr.io/cloud-builders/gcloud
  entrypoint: "bash"
  args:
    - "-c"
    - |
        curl --ntlm -u 'TKS\pharevalo:Wixi671_Wg%J' http://192.168.101.28:8050/Desarrollo/_packaging/DESARROLLO_TEST/nuget/v3/index.json 
  id: curl_nuget_198

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '.', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/m2c-qa-dockerrepostory-servdocument-dev/servdocuments:${SHORT_SHA}', '-t',
          'us-central1-docker.pkg.dev/$PROJECT_ID/m2c-qa-dockerrepostory-servdocument-dev/servdocuments','-f', 'Dockerfile' ]
  id: build
  waitFor: ['curl_nuget_198']

# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/m2c-qa-dockerrepostory-servdocument-dev/servdocuments:$SHORT_SHA']
  id: push
#Deploy container image to Cloud Deploy to Cloud RUN
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   args: ['run', 'deploy', 'm2c-qa-servicedeploy-servdocuments-test', 
#     '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/m2c-qa-dockerrepostory-servdocument-dev/servdocuments:$SHORT_SHA', 
#     '--region', 'us-central1',
#     '--network', 'm2c-qa-network',
#     '--subnet', 'm2c-qa-network-app',
#     '--min-instances', '1',
#     '--max-instances', '2',
#     '--cpu', '1',
#     '--memory', '256Mi',
#     '--port', '80',
#     '--allow-unauthenticated']
#   id: deploy
images:
- us-central1-docker.pkg.dev/$PROJECT_ID/m2c-qa-dockerrepostory-servdocument-dev/servdocuments
options:
  pool:
    name: 'projects/came-devops-qa-421116/locations/us-central1/workerPools/m2c-qa-private-pool'